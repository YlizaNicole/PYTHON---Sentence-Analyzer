Validating found git in: git
Using git 2.20.1 from git
> git rev-parse --git-dir
Open repository: /home/salazarylizanicole
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git check-ignore -v -z --stdin
> git show --textconv :assignment_7/second.py
> git ls-files --stage -- /home/salazarylizanicole/assignment_7/second.py
> git cat-file -s e8da90c4453c93daf9c09b668e0db8d28e9056f0
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git show --textconv :assignment_7/first.py
> git ls-files --stage -- /home/salazarylizanicole/assignment_7/first.py
> git cat-file -s 176c73816990875f12f97def88508a02bf7309fc
> git show --textconv :assignment_7/second.py
> git ls-files --stage -- /home/salazarylizanicole/assignment_7/second.py
> git cat-file -s e8da90c4453c93daf9c09b668e0db8d28e9056f0
> git show --textconv :assignment_7/first.py
> git ls-files --stage -- /home/salazarylizanicole/assignment_7/first.py
> git cat-file -s 176c73816990875f12f97def88508a02bf7309fc
> git show --textconv :assignment_7/second.py
> git ls-files --stage -- /home/salazarylizanicole/assignment_7/second.py
> git cat-file -s e8da90c4453c93daf9c09b668e0db8d28e9056f0
> git show --textconv :assignment_7/second.py
> git ls-files --stage -- /home/salazarylizanicole/assignment_7/second.py
> git cat-file -s e8da90c4453c93daf9c09b668e0db8d28e9056f0
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
